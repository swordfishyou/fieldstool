//
//  StringWKTHelpersTests.swift
//  FieldTool
//
//  Created by Anatoly Tukhtarov on 2/15/17.
//  Copyright Â© 2017 Anatoly Tukhtarov. All rights reserved.
//

import XCTest

class StringWKTHelpersTests: XCTestCase {
    func testGeometryNameIsCorrectForValidWKTFormats() {
        // Arrange
        let inputs = ["POINT (10.5252 30.4401)",
                      "LINESTRING (10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106)",
                      "POLYGON ((30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027))",
                      "POLYGON ((35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361), (20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524))"]
        let expectedResults = ["POINT", "LINESTRING", "POLYGON", "POLYGON"]
        // Act
        let actualResults = inputs.map { $0.geometryName() }
        // Assert
        XCTAssertEqual(actualResults, expectedResults)
    }
    
    func testTrimmingGeometryNameIsCorrectForValidWKTFormats() {
        // Arrange
        let inputs = ["POINT (10.5252 30.4401)",
                      "LINESTRING (10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106)",
                      "POLYGON ((30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027))",
                      "POLYGON ((35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361), (20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524))"]
        let expectedResults = ["(10.5252 30.4401)",
                               "(10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106)",
                               "((30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027))",
                               "((35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361), (20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524))"]
        // Act
        let actualResults = inputs.map { $0.trimmingGeometryName() }
        // Assert
        XCTAssertEqual(actualResults, expectedResults)
    }
    
    func testReplacingGeometriesSeparatorIsCorrectForValidWKTFormats() {
        // Arrange
        let inputs = ["10.5252 30.4401",
                      "10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106",
                      "30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027",
                      "35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361), (20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524"]
        let expectedResults = ["10.5252 30.4401",
                               "10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106",
                               "30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027",
                               "35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361-20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524"]
        // Act
        let actualResults = inputs.map { $0.replacingGeometriesSeparator(with: "-") }
        // Assert
        XCTAssertEqual(actualResults, expectedResults)
    }
    
    func testReplacingCoordinatesSeparatorIsCorrectForValidWKTFormats() {
        // Arrange
        let inputs = ["10.5252 30.4401",
                      "10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106",
                      "30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027",
                      "35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361",
                      "20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524"]
        let expectedResults = ["10.5252 30.4401",
                               "10.5252 30.4401-30.1661 10.0027-40.2201 40.1106",
                               "30.1661 10.0027-40.2201 40.1106-20.2451 40.2510-10.7136 20.2715-30.1661 10.0027",
                               "35.6247 10.1361-45.9472 45.0007-15.3567 40.2514-10.7136 20.2715-35.6247 10.1361",
                               "20.8325 30.3524-35.2246 35.1624-30.2452 20.5858-20.8325 30.3524"]
        // Act
        let actualResults = inputs.map { $0.replacingCoordinatesSeparator(with: "-") }
        // Assert
        XCTAssertEqual(actualResults, expectedResults)
    }
    
    func testTrimmingParenthesesIsCorrectForValidWKTFormats() {
        // Arrange
        let inputs = ["(10.5252 30.4401)",
                      "(10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106)",
                      "((30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027))",
                      "((35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361",
                      "20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524))"]
        let expectedResults = ["10.5252 30.4401",
                               "10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106",
                               "30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027",
                               "35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361",
                               "20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524"]
        // Act
        let actualResults = inputs.map { $0.trimmingParentheses() }
        // Assert
        XCTAssertEqual(actualResults, expectedResults)
    }
    
    func testCoordinatesSeparatedByDelimiterIsCorrectForValidWKTFormats() {
        // Arrange
        let inputs = ["(10.5252 30.4401)",
                      "(10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106)",
                      "((30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027))",
                      "((35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361",
                      "20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524))"]
        let expectedResults = ["10.5252 30.4401",
                               "10.5252 30.4401-30.1661 10.0027-40.2201 40.1106",
                               "30.1661 10.0027-40.2201 40.1106-20.2451 40.2510-10.7136 20.2715-30.1661 10.0027",
                               "35.6247 10.1361-45.9472 45.0007-15.3567 40.2514-10.7136 20.2715-35.6247 10.1361",
                               "20.8325 30.3524-35.2246 35.1624-30.2452 20.5858-20.8325 30.3524"]
        // Act
        let actualResults = inputs.map { $0.coordinates(separatedBy: "-") }
        // Assert
        XCTAssertEqual(actualResults, expectedResults)
    }
    
    func testGeometryComponentsSeparatedByDelimiterCorrectForValidWKTFormats() {
        // Arrange
        let inputs = ["POINT (10.5252 30.4401)",
                      "LINESTRING (10.5252 30.4401, 30.1661 10.0027, 40.2201 40.1106)",
                      "POLYGON ((30.1661 10.0027, 40.2201 40.1106, 20.2451 40.2510, 10.7136 20.2715, 30.1661 10.0027))",
                      "POLYGON ((35.6247 10.1361, 45.9472 45.0007, 15.3567 40.2514, 10.7136 20.2715, 35.6247 10.1361), (20.8325 30.3524, 35.2246 35.1624, 30.2452 20.5858, 20.8325 30.3524))"]
        let expectedResults = ["10.5252 30.4401",
                               "10.5252 30.4401-30.1661 10.0027-40.2201 40.1106",
                               "30.1661 10.0027-40.2201 40.1106-20.2451 40.2510-10.7136 20.2715-30.1661 10.0027",
                               "35.6247 10.1361-45.9472 45.0007-15.3567 40.2514-10.7136 20.2715-35.6247 10.1361",
                               "20.8325 30.3524-35.2246 35.1624-30.2452 20.5858-20.8325 30.3524"]
        // Act
        let actualResults = inputs.map { $0.geometryComponents(separatedBy: "-") }.flatMap { $0 }
        
        // Assert
        XCTAssertEqual(actualResults, expectedResults)
    }
}
